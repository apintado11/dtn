Instructions to run:
1. select lightingService.js
2. run npm i
3. click run

Details:
lightingService.js iterates through a json file of lighting strikes.
The service will do a formatting check for missing commas.
Once satisfied, the service will iterate though each strike and calculate the quadkey using an npm package.
The quadkey is used to find  matching asset(s) for the given location.
An alert will be generated on the console for the strike if and only if another alert has not already been generated
for the given quadkey AND for the given owner.

Additional Questions: 
If we put this code into production, but found it too slow, or it needed to scale to many more users or more frequent strikes, what are the first things you would think of to speed it up?
A: To optimize this logic to handle a large load, we would need to reduce the amount of loops utilized. If a DB is involved, then we would implement indexing.
